{"version":3,"sources":["history.js","store/user.js","store/tasks.js","store/singletask.js","store/groceries.js","store/allGroups.js","store/singleGroup.js","store/index.js","components/Navigation/SideNav.js","components/Navigation/BottomNav.js","components/UserHome/UserHome.js","components/AllHome/HomePage.js","components/User/AuthForm.js","components/User/Account.js","components/User/AccountSettings.js","components/Tasks/SingleTask.js","components/Tasks/TaskList.js","components/Grocery/GroceryList.js","components/Groups/GroupList.js","components/Groups/CreateGroup.js","components/Groups/SingleGroup.js","routes.js","App.js","reportWebVitals.js","serviceWorkerRegistration.js","index.js"],"names":["history","createBrowserHistory","GET_USER","REMOVE_USER","ADD_USER","defaultUser","getUser","user","type","me","dispatch","a","axios","get","res","data","console","error","auth","email","password","method","firstName","lastName","post","name","push","dispatchOrHistoryErr","GET_TASKS","ADD_TASK","DELETE_TASK","initialState","getTasks","tasks","addTask","task","deleteTask","taskId","GET_TASK","UPDATE_TASK","getTask","GET_SINGLE_TASK","updateTask","GET_GROCERIES","ADD_GROCERY_ITEM","DELETE_GROCERY_ITEM","getGroceries","groceries","addGroceryItem","grocery","GET_GROUPS","ADD_GROUP","DELETE_GROUP","getGroups","groups","addGroup","group","deleteGroup","groupId","SET_SINGLE_GROUP","setSingleGroup","updateGroupThunk","put","log","singleGroupReducer","state","action","reducer","combineReducers","singletask","singleGroup","middleware","composeWithDevTools","applyMiddleware","thunkMiddleware","createLogger","collapsed","store","createStore","connect","isLoggedIn","id","handleClick","className","to","Fragment","src","avatarUrl","href","onClick","BottomNav","props","HomePage","AuthForm","displayName","handleSubmit","onSubmit","htmlFor","required","response","mapDispatch","evt","preventDefault","formName","target","value","Login","withRouter","Signup","AccountSettings","formStatus","toggleFormStatus","bind","this","loadInitialData","setState","Component","SingleTask","match","params","err","next","TaskList","fetchTaskThunk","showModal","handleChange","fetchTasks","userId","event","e","length","map","key","handleDelete","onChange","React","delete","removeTaskThunk","newTask","addTaskThunk","updatedTask","updateSingleTask","GroceryList","fetchItems","addItem","deleteItem","groceryId","removeGroceryItemThunk","newItem","addGroceryItemThunk","GroupList","fetchGroups","removeGroupThunk","updateGroup","CreateGroup","description","redirectTo","alert","pathname","placeholder","newGroup","addGroupThunk","SingleGroup","fetchGroup","addUser","imageUrl","users","User_Group","role","fetchSingleGroup","newUser","addToGroupThunk","Routes","path","component","exact","UserHome","Account","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","isLocalhost","Boolean","window","location","hostname","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","catch","ReactDOM","render","document","getElementById","URL","process","origin","addEventListener","fetch","headers","contentType","status","indexOf","ready","unregister","reload","checkValidServiceWorker","serviceWorkerRegistration"],"mappings":"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","file":"static/js/main.01557911.chunk.js","sourcesContent":["import {createMemoryHistory, createBrowserHistory} from 'history'\n\nconst history =\n  process.env.NODE_ENV === 'test'\n    ? createMemoryHistory()\n    : createBrowserHistory()\n\nexport default history\n","import axios from \"axios\";\nimport history from \"../history\";\n\n/**\n * ACTION TYPES\n */\nconst GET_USER = \"GET_USER\";\nconst REMOVE_USER = \"REMOVE_USER\";\nconst ADD_USER = \"ADD_USER\";\n\n/**\n * INITIAL STATE\n */\nconst defaultUser = {};\n\n/**\n * ACTION CREATORS\n */\nconst getUser = user => ({ type: GET_USER, user });\nconst removeUser = () => ({ type: REMOVE_USER });\nconst addUser = user => ({ type: ADD_USER, user });\n\n/**\n * THUNK CREATORS\n */\nexport const me = () => async dispatch => {\n  try {\n    const res = await axios.get(\"/auth/me\");\n    dispatch(getUser(res.data || defaultUser));\n  } catch (err) {\n    console.error(err);\n  }\n};\n\n\n\nexport const auth = (\n  email,\n  password,\n  method,\n  firstName,\n  lastName\n) => async dispatch => {\n  let res;\n  try {\n    res = await axios.post(`/auth/${method}`, {\n      email,\n      password,\n      name,\n      firstName,\n      lastName\n    });\n    history.push(\"/home\");\n  } catch (authError) {\n    return dispatch(getUser({ error: authError }));\n  }\n  try {\n    dispatch(getUser(res.data));\n    history.push(\"/home\");\n  } catch (dispatchOrHistoryErr) {\n    console.error(dispatchOrHistoryErr);\n  }\n};\n\nexport const updateUserThunk = user => {\n  return async dispatch => {\n    try {\n      const { data } = await axios.put(`/api/users/${user.id}`, user);\n      dispatch(getUser(data));\n    } catch (error) {\n      console.log(\"error editing user info\");\n    }\n  };\n};\n\nexport const logout = () => async dispatch => {\n  try {\n    await axios.post(\"/auth/logout\");\n    dispatch(removeUser());\n    history.push(\"/login\");\n  } catch (err) {\n    console.error(err);\n  }\n};\n\n/**\n * REDUCER\n */\nexport default function(state = defaultUser, action) {\n  switch (action.type) {\n    case GET_USER:\n      return action.user;\n    case REMOVE_USER:\n      return defaultUser;\n    case ADD_USER:\n      return [...state, action.user];\n    default:\n      return state;\n  }\n}\n","import axios from \"axios\";\n\n/**\n * ACTION TYPES\n */\n\nconst GET_TASKS = \"GET_TASKS\";\nconst ADD_TASK = \"ADD_TASK\";\nconst DELETE_TASK = \"DELETE_TASK\";\n\n/**\n * INITIAL STATE\n */\n\nconst initialState = [];\n\n/**\n * ACTION CREATORS\n */\nconst getTasks = (tasks) => ({ type: GET_TASKS, tasks });\nconst addTask = (task) => ({ type: ADD_TASK, task });\nconst deleteTask = (taskId) => ({ type: DELETE_TASK, taskId });\n\n/**\n * THUNK CREATORS\n */\n\nexport const fetchTasksThunk = () => async (dispatch) => {\n  try {\n    const { data: tasks } = await axios.get(`/api/tasks`);\n    dispatch(getTasks(tasks));\n  } catch (error) {\n    console.log(\"error fetching tasks\");\n  }\n};\n\nexport const addTaskThunk = (task) => async (dispatch) => {\n  try {\n    console.log(task)\n    const { data: newTask } = await axios.post(\"/api/tasks/\", task);\n    dispatch(addTask(newTask));\n  } catch (error) {\n    console.error(\"Error adding task!\");\n    console.error(error);\n  }\n};\n\nexport const removeTaskThunk = (taskId) => async (dispatch) => {\n  try {\n    await axios.delete(`/api/tasks/${taskId}`);\n    dispatch(deleteTask(taskId));\n  } catch (error) {\n    console.error(\"Error deleting task!\");\n    console.error(error);\n  }\n};\n\nexport default function tasksReducer(state = initialState, action) {\n  switch (action.type) {\n    case GET_TASKS:\n      return action.tasks;\n    case ADD_TASK:\n      return [...state, action.task];\n    case DELETE_TASK:\n      return [...state];\n    default:\n      return state;\n  }\n}\n","import axios from 'axios'\n\n// intialState\nconst initialState = {}\n\n// action constants\nconst GET_TASK = 'GET_TASK'\nconst UPDATE_TASK = 'UPDATE_TASK'\n\nconst getTask = task => ({ type: GET_SINGLE_TASK, task })\nconst updateTask = task => ({ type: UPDATE_TASK, task })\n\n// thunk creators\nexport const fetchTaskThunk = taskId => async dispatch => {\n  try {\n    const { data: task } = await axios.get(`/api/tasks/${taskId}`)\n    dispatch(getTask(task))\n  } catch (error) {\n    console.error('Error fetching task!')\n    console.error(error)\n  }\n}\n\nexport const updateSingleTask = task => async dispatch => {\n  try {\n    const { data: updatedTask } = await axios.put(`/api/tasks/${task.taskId}`, task)\n    dispatch(updateTask(updatedTask))\n  } catch (error) {\n    console.error('Error updating task!')\n    console.error(error)\n  }\n}\n\n\n\nexport default function singleTaskReducer(state = initialState, action) {\n  switch (action.type) {\n    case GET_TASK:\n      return { ...state, ...action.task }\n    case UPDATE_TASK:\n      return { ...state, ...action.task }\n    default:\n      return state\n  }\n}\n","import axios from \"axios\";\n\n/**\n * ACTION TYPES\n */\n\nconst GET_GROCERIES = \"GET_GROCERIES\";\nconst ADD_GROCERY_ITEM = \"ADD_GROCERY_ITEM\";\nconst DELETE_GROCERY_ITEM = \"DELETE_GROCERY_ITEM\";\n\n/**\n * INITIAL STATE\n */\n\nconst initialState = [];\n\n/**\n * ACTION CREATORS\n */\nconst getGroceries = (groceries) => ({ type: GET_GROCERIES, groceries });\nconst addGroceryItem = (grocery) => ({ type: ADD_GROCERY_ITEM, grocery});\nconst deleteGroceryItem = (grocery) => ({ type: DELETE_GROCERY_ITEM, grocery });\n\n/**\n * THUNK CREATORS\n */\n\nexport const fetchGroceriesThunk = () => async (dispatch) => {\n  try {\n    const { data: groceries } = await axios.get(`/api/groceries`);\n    dispatch(getGroceries(groceries));\n  } catch (error) {\n    console.log(\"error fetching groceries\");\n  }\n};\n\nexport const addGroceryItemThunk = (grocery) => async (dispatch) => {\n  try {\n    const { data: newItem} = await axios.post(\"/api/groceries/\", grocery);\n    dispatch(addGroceryItem(newItem));\n  } catch (error) {\n    console.error(\"Error adding grocery item!\");\n    console.error(error);\n  }\n};\n\nexport const removeGroceryItemThunk = (groceryId) => async (dispatch) => {\n  try {\n    await axios.delete(`/api/groceries/${groceryId}`);\n    dispatch(deleteGroceryItem(groceryId));\n  } catch (error) {\n    console.error(\"Error deleting grocery item!\");\n    console.error(error);\n  }\n};\n\nexport default function groceriesReducer(state = initialState, action) {\n  switch (action.type) {\n    case GET_GROCERIES:\n      return action.groceries;\n    case ADD_GROCERY_ITEM:\n      return [...state, action.grocery];\n    case DELETE_GROCERY_ITEM:\n      return [...state];\n    default:\n      return state;\n  }\n}\n","import axios from \"axios\";\n\n/**\n * ACTION TYPES\n */\n\nconst GET_GROUPS = \"GET_GROUPS\";\nconst ADD_GROUP = \"ADD_GROUP\";\nconst DELETE_GROUP = \"DELETE_GROUP\";\n\n/**\n * INITIAL STATE\n */\n\nconst initialState = [];\n\n/**\n * ACTION CREATORS\n */\nconst getGroups = (groups) => ({ type: GET_GROUPS, groups });\nconst addGroup = (group) => ({ type: ADD_GROUP, group });\nconst deleteGroup = (groupId) => ({ type: DELETE_GROUP, groupId });\n\n/**\n * THUNK CREATORS\n */\n\nexport const fetchGroupsThunk = () => async (dispatch) => {\n  try {\n    console.log(\"inside thunks\");\n    const { data: groups } = await axios.get(`/api/groups`);\n    console.log(groups, \"groups inside thunks\");\n    dispatch(getGroups(groups));\n  } catch (error) {\n    console.log(\"error fetching groups\");\n  }\n};\n\nexport const addGroupThunk = (group) => async (dispatch) => {\n  try {\n    const { data: newGroup } = await axios.post(\"/api/groups\", group);\n    dispatch(addGroup(newGroup));\n  } catch (error) {\n    console.error(\"Error adding group!\");\n    console.error(error);\n  }\n};\n\nexport const removeGroupThunk = (groupId) => async (dispatch) => {\n  try {\n    await axios.delete(`/api/groups/${groupId}`);\n    dispatch(deleteGroup(groupId));\n  } catch (error) {\n    console.error(\"Error deleting group!\");\n    console.error(error);\n  }\n};\n\nexport default function groupsReducer(state = initialState, action) {\n  switch (action.type) {\n    case GET_GROUPS:\n      return action.groups;\n    case ADD_GROUP:\n      return [...state, action.group];\n    case DELETE_GROUP:\n      return [...state];\n    default:\n      return state;\n  }\n}\n","import axios from \"axios\";\n\n//ACTIONS\nconst SET_SINGLE_GROUP = \"SET_SINGLE_GROUP\";\n//ACTION CREATORS\n\nexport const setSingleGroup = (group) => {\n  return {\n    type: SET_SINGLE_GROUP,\n    group,\n  };\n};\n\n\n//THUNK CREATORS\n\nexport const fetchSingleGroup = (groupId) => {\n  return async (dispatch) => {\n    try {\n      const { data: group } = await axios.get(`/api/groups/${groupId}`);\n      dispatch(setSingleGroup(group));\n    } catch (err) {\n      console.error(\"There was a problem fetching this group!\");\n      console.error(err);\n    }\n  };\n};\n\n//update group info\nexport const updateGroupThunk = (group) => {\n  return async (dispatch) => {\n    try {\n      const { data } = await axios.put(`/api/groups/${groupId}`, group);\n      dispatch(setSingleGroup(data));\n    } catch (error) {\n      console.log(\"error updating group\");\n    }\n  };\n};\n\n// add user to group\nexport const addToGroupThunk = (groupId, userId) => {\n  return async (dispatch) => {\n    try {\n      const { data: newUser } = await axios.post(\n        `/api/groups/${groupId}`, {\n          userId\n        }\n      );\n      dispatch(setSingleGroup(newUser));\n    } catch (err) {\n      console.log(err);\n    }\n  };\n};\n\n//remove user from group\nexport const deleteFromGroupThunk = (groupId, userId) => {\n  return async (dispatch) => {\n    try {\n      const { data: deletedUser } = await axios.delete(\n        `/api/groups/${groupId}/${userId}`\n      );\n      dispatch(setSingleGroup(deletedUser));\n    } catch (err) {\n      console.log(err);\n    }\n  };\n};\n\n//INITIAL STATE\nconst initialState = {};\n\n//REDUCER\n\nconst singleGroupReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case SET_SINGLE_GROUP:\n      return action.group;\n    default:\n      return state;\n  }\n};\n\nexport default singleGroupReducer;\n","import { createStore, combineReducers, applyMiddleware } from \"redux\";\nimport { createLogger } from \"redux-logger\";\nimport thunkMiddleware from \"redux-thunk\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport user from \"./user\";\nimport tasks from \"./tasks\";\nimport singletask from \"./singletask\";\nimport groceries from \"./groceries\";\nimport groups from \"./allGroups\";\nimport singleGroup from \"./singleGroup\"\n\nconst reducer = combineReducers({\n  user,\n  singletask,\n  tasks,\n  groceries,\n  groups,\n  singleGroup\n});\n\nconst middleware = composeWithDevTools(\n  applyMiddleware(thunkMiddleware, createLogger({ collapsed: true }))\n);\nconst store = createStore(reducer, middleware);\n\nexport default store;\nexport * from \"./user\";\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport {logout} from '../../store';\nimport { Link } from \"react-router-dom\";\nimport \"./SideNav.css\";\n\nconst SideNav = ({ handleClick, isLoggedIn, user }) => (\n  <div className=\"sidenav-wrapper\">\n    <div id=\"logo\">\n      <Link to=\"/home\">Home</Link>\n    </div>\n    {isLoggedIn ? (\n      <React.Fragment>\n        <div id=\"myTools\">\n          <h3>My Tools</h3>\n          <Link to=\"/tasks\">Tasks</Link>\n          <Link to=\"/grocery\">Groceries</Link>\n          <Link to=\"/groups\">My Groups</Link>\n        </div>\n        <div className=\"account-box\">\n        <Link to=\"/account\"><img src={user.avatarUrl}></img></Link>\n        <div className=\"accountlinks\">\n          <div>{user.firstName} {user.lastName}</div>\n          <Link to=\"/account\">My Account</Link>\n          <a href=\"#\" onClick={handleClick}>\n            Sign Out\n          </a>\n          </div>\n        </div>\n      </React.Fragment>\n    ) : (\n      <React.Fragment>\n        <div className=\"accountlinks\">\n          <Link to=\"/login\">Login</Link>\n          <Link to=\"/signup\">Sign Up</Link>\n        </div>\n      </React.Fragment>\n    )}\n  </div>\n);\n\nconst mapState = (state) => {\n  return {\n    user: state.user,\n    isLoggedIn: !!state.user.id,\n  };\n};\n\nconst mapDispatch = (dispatch) => {\n  return {\n    handleClick() {\n      dispatch(logout());\n    },\n  };\n};\n\nexport default connect(mapState, mapDispatch)(SideNav);\n\nSideNav.propTypes = {\n  user: PropTypes.object.isRequired,\n  handleClick: PropTypes.func.isRequired,\n  isLoggedIn: PropTypes.bool.isRequired,\n};\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport \"./bottomnav.css\";\n\nconst BottomNav = () => (\n  <div className=\"bottomnav-wrapper\">\n      <Link to=\"/home\">Home</Link>\n      </div>\n);\n\n\nexport default BottomNav\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\nimport \"./UserHome.css\";\n\n\nexport const UserHome = props => {\n  const { firstName } = props;\n\n  return (\n    <div className=\"userhome-wrapper\">\n      <h1>User Home</h1>\n    </div>\n  );\n};\n\nconst mapState = state => {\n  return {\n    firstName: state.user.firstName\n  };\n};\n\nexport default connect(mapState)(UserHome);\n\nUserHome.propTypes = {\n  firstName: PropTypes.string\n};\n","import React from \"react\";\nimport \"./HomePage.css\";\n\nexport const HomePage = () => {\n  return (\n    <div className=\"homepage-wrap\">\n        <h1>Welcome to our app</h1>\n        <li>How to install our app - Android - iOS</li>\n        <li>About Us</li>\n        <li>FAQs</li>\n        <li>Getting Started</li>\n      </div>\n  );\n};\n\nexport default HomePage;\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\nimport { auth } from \"../../store\";\nimport { withRouter } from \"react-router-dom\";\n\nconst AuthForm = props => {\n  const { name, displayName, handleSubmit, error } = props;\n\n  return (\n    <div className=\"forms\">\n      <div className=\"form_info\">\n        <form onSubmit={handleSubmit} name={name}>\n          {displayName != \"Login\" ? (\n            <div>\n              <div className=\"form-input\">\n                <label htmlFor=\"firstName\">\n                  <small className=\"form-names\">First Name</small>\n                </label>\n                <input\n                  className=\"info-input\"\n                  name=\"firstName\"\n                  type=\"text\"\n                  required\n                />\n              </div>\n              <div className=\"form-input\">\n                <label htmlFor=\"lastName\">\n                  <small className=\"form-names\">Last Name</small>\n                </label>\n                <input\n                  className=\"info-input\"\n                  name=\"lastName\"\n                  type=\"text\"\n                  required\n                />\n              </div>\n            </div>\n          ) : null}\n\n          <div className=\"form-input\">\n            <label htmlFor=\"email\">\n              <small className=\"form-names\">Email</small>\n            </label>\n            <input className=\"info-input\" name=\"email\" type=\"text\" required />\n          </div>\n\n          <div className=\"form-input\">\n            <label htmlFor=\"password\">\n              <small className=\"form-names\">Password</small>\n            </label>\n            <input\n              className=\"info-input\"\n              name=\"password\"\n              type=\"password\"\n              required\n            />\n          </div>\n\n          {displayName != \"Login\" ? (\n            <div className=\"form-input\">\n              <label htmlFor=\"confirmPassword\">\n                <small className=\"form-names\">Confirm Password</small>\n              </label>\n              <input\n                className=\"info-input\"\n                name=\"confirmPassword\"\n                type=\"password\"\n                required\n              />\n            </div>\n          ) : null}\n          <div className=\"form-input\">\n            <button className=\"login_button\" type=\"submit\">\n              {displayName}\n            </button>\n          </div>\n          <h3>\n            {error && error.response && <div> {error.response.data} </div>}\n          </h3>\n        </form>\n      </div>\n      <a href=\"/auth/google\">{displayName} with Google</a>\n    </div>\n  );\n};\n\nconst mapLogin = state => {\n  return {\n    name: \"login\",\n    displayName: \"Login\",\n    error: state.user.error\n  };\n};\n\nconst mapSignup = state => {\n  return {\n    name: \"signup\",\n    displayName: \"Sign Up\",\n    error: state.user.error\n  };\n};\n\nconst mapDispatch = dispatch => {\n  return {\n    handleSubmit(evt) {\n      evt.preventDefault();\n      const formName = evt.target.name;\n\n      if (formName === \"login\") {\n        const email = evt.target.email.value;\n        const password = evt.target.password.value;\n        dispatch(auth(email, password, formName));\n      } else if (formName === \"signup\") {\n        const email = evt.target.email.value;\n        const password = evt.target.password.value;\n        const firstName = evt.target.firstName.value;\n        const lastName = evt.target.lastName.value;\n        dispatch(auth(email, password, formName, firstName, lastName));\n      }\n    }\n  };\n};\n\nexport const Login = withRouter(connect(mapLogin, mapDispatch)(AuthForm));\nexport const Signup = withRouter(connect(mapSignup, mapDispatch)(AuthForm));\n\nAuthForm.propTypes = {\n  name: PropTypes.string.isRequired,\n  displayName: PropTypes.string.isRequired,\n  handleSubmit: PropTypes.func.isRequired,\n  error: PropTypes.object\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\n\n/**\n * COMPONENT\n */\nexport const Account = props => {\n  const { email } = props;\n\n  return (\n    <div>\n      <h3>My Account</h3>\n      <Link to=\"/account/settings\">Account Settings</Link>\n      <div>Edit Groups</div>\n      <div>My Stats</div>\n    </div>\n  );\n};\n\n/**\n * CONTAINER\n */\nconst mapState = state => {\n  return {\n    email: state.user.email\n  };\n};\n\nexport default connect(mapState)(Account);\n\n/**\n * PROP TYPES\n */\nAccount.propTypes = {\n  email: PropTypes.string\n};\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\nimport { me } from \"../../store\";\n\nclass AccountSettings extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      formStatus: false,\n    };\n    this.toggleFormStatus = this.toggleFormStatus.bind(this);\n  }\n\n  componentDidMount() {\n    this.props.loadInitialData();\n  }\n  toggleFormStatus() {\n    this.setState({ formStatus: !this.state.formStatus });\n  }\n\n  render() {\n    const { user } = this.props;\n\n    return (\n      <div>\n       <div>\n        <h3>Personal Info:</h3>\n        <button onClick={this.toggleFormStatus}>\n            Edit\n          </button>\n          {this.state.formStatus ? (<div>Change</div>):null}\n        <li>Name: {user.firstName} {user.lastName}</li>\n        <li>Email: {user.email}</li>\n        <li>Password</li>\n      </div>\n      </div>\n    );\n  }\n}\n\nconst mapState = (state) => {\n  return {\n    user: state.user,\n  };\n};\n\nconst mapDispatch = (dispatch) => {\n  return {\n    loadInitialData() {\n      dispatch(me());\n    },\n  };\n};\n\nexport default connect(mapState, mapDispatch)(AccountSettings);\n\nAccountSettings.propTypes = {\n  loadInitialData: PropTypes.func.isRequired,\n};\n","import React, { Component } from 'react'\nimport { connect } from \"react-redux\";\nimport { fetchTaskThunk } from \"../../store/singletask\"\n\nclass SingleTask extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      name: \"\"\n    };\n  }\n\n  componentDidMount() {\n    try {\n      this.props.getTask(this.props.match.params.taskId)\n    } catch (err) {\n      next(err)\n    }\n  }\n\n  render() {\n    let { task } = this.props\n    console.log(task)\n\n    return (\n      <div id='single-task'>\n        <h3>{task.name}</h3>\n        <h3>Description</h3>\n         </div>\n    )\n  }\n}\n\nconst mapState = state => ({\n  task: state.singletask\n})\n\nconst mapDispatch = dispatch => ({\n  getTask: (taskId) => dispatch(fetchTaskThunk(taskId))\n})\n\nexport default connect(mapState, mapDispatch)(SingleTask)\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { updateSingleTask } from \"../../store/singletask\";\nimport SingleTask from './SingleTask'\nimport \"./Tasks.css\";\n\n\nimport {\n  fetchTasksThunk,\n  addTaskThunk,\n  removeTaskThunk,\n} from \"../../store/tasks\";\n\n\n/*\nTODOS:\n1. Don't allow user to enter empty task\n2. Make add/edit modals\n3. Cross out completed tasks\n4. Button to filter out completed tasks\n*/\n\nclass TaskList extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      name: \"\",\n      showModal: false,\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.showModal = this.showModal.bind(this);\n  }\n  componentDidMount() {\n    this.props.fetchTasks(this.props.match.params.userId);\n  }\n\n  handleChange(event) {\n    this.setState({\n      [event.target.name]: event.target.value,\n    });\n  }\n\n  async handleSubmit(event) {\n    event.preventDefault();\n    try {\n      await this.props.addTask(this.state);\n      console.log(this.state)\n      this.setState({\n        name: \"\",\n      });\n    } catch (err) {\n      console.log(\"error creating task\", err);\n    }\n  }\n\n  async handleDelete(id) {\n    try {\n      await this.props.deleteTask(id);\n      this.props.fetchTasks();\n    } catch (err) {\n      console.error(err);\n    }\n  }\n\n  // async updateTask(studentId) {\n  //   try {\n  //     await this.props.updateStudentThunk(studentId);\n  //     this.props.fetchStudents();\n  //   } catch (err) {\n  //     console.error(err);\n  //   }\n  // }\n  showModal(e) {\n    this.setState({ showModal: true });\n  }\n\n\n  render() {\n    let { tasks } = this.props;\n    // console.log(tasks)\n\n    return (\n      <div className=\"task-wrapper\">\n        <h1 className=\"tool-title\">My Tasks</h1>\n        <div id=\"task-box\">\n        {tasks.length ? \n        tasks.map((task) => (\n          <p key={task.id} className=\"singletask\">\n            {task.name}\n            <button\n              onClick={() => this.handleDelete(task.id)}\n              className=\"deleteTask\"\n            >\n              X\n            </button>\n          </p>\n        )) : \"You have no tasks\"}\n        </div>\n        <form id=\"add-task-form\" onSubmit={this.handleSubmit}>\n          <label htmlFor=\"name\">Add Task:</label>\n          <input\n            name=\"name\"\n            type=\"text\"\n            onChange={this.handleChange}\n            value={this.state.name}\n          />\n          <button type=\"submit\">Add</button>\n        </form>\n\n      </div>\n    );\n  }\n}\n\nconst mapState = (state) => ({\n  tasks: state.tasks,\n  userId: state.user.id,\n});\n\nconst mapDispatch = (dispatch) => ({\n  fetchTasks: (userId) => dispatch(fetchTasksThunk(userId)),\n  deleteTask: (taskId) => dispatch(removeTaskThunk(taskId)),\n  addTask: (task) => dispatch(addTaskThunk(task)),\n  updateTask: (task) => dispatch(updateSingleTask(task))\n});\n\nexport default connect(mapState, mapDispatch)(TaskList);","import React from \"react\";\nimport { connect } from \"react-redux\";\n// import { updateSingleGroceryItem } from \"../../store/singleGrocery\";\n\nimport {\n  fetchGroceriesThunk,\n  addGroceryItemThunk,\n  removeGroceryItemThunk,\n} from \"../../store/groceries\";\n\nclass GroceryList extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      name: \"\",\n      showModal: false,\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.showModal = this.showModal.bind(this);\n  }\n  componentDidMount() {\n    this.props.fetchItems(this.props.match.params.userId);\n  }\n\n  handleChange(event) {\n    this.setState({\n      [event.target.name]: event.target.value,\n    });\n  }\n\n  async handleSubmit(event) {\n    event.preventDefault();\n    try {\n      await this.props.addItem(this.state);\n      this.setState({\n        name: \"\",\n      });\n    } catch (err) {\n      console.log(\"error creating grocery item\", err);\n    }\n  }\n\n  async handleDelete(id) {\n    try {\n      await this.props.deleteItem(id);\n      this.props.fetchItems();\n    } catch (err) {\n      console.error(err);\n    }\n  }\n\n  // async updateTask(studentId) {\n  //   try {\n  //     await this.props.updateStudentThunk(studentId);\n  //     this.props.fetchStudents();\n  //   } catch (err) {\n  //     console.error(err);\n  //   }\n  // }\n  showModal(e) {\n    this.setState({ showModal: true });\n  }\n\n  render() {\n    let { groceries } = this.props;\n\n    return (\n      <div id=\"groceries-wrap\">\n        <form id=\"add-grocery-form\" onSubmit={this.handleSubmit}>\n          <label htmlFor=\"name\">Add Grocery Item:</label>\n          <input\n            name=\"name\"\n            type=\"text\"\n            onChange={this.handleChange}\n            value={this.state.name}\n          />\n          <button type=\"submit\">Add</button>\n        </form>\n\n        <h3>My Groceries</h3>\n        {groceries.map((grocery) => (\n          <p key={grocery.id}>\n            {grocery.name}\n            <button\n              onClick={() => this.handleDelete(grocery.id)}\n              className=\"delete-item\"\n            >\n              X\n            </button>\n          </p>\n        ))}\n      </div>\n    );\n  }\n}\n\nconst mapState = (state) => ({\n  groceries: state.groceries,\n  userId: state.user.id,\n});\n\nconst mapDispatch = (dispatch) => ({\n  fetchItems: (userId) => dispatch(fetchGroceriesThunk(userId)),\n  deleteItem: (groceryId) => dispatch(removeGroceryItemThunk(groceryId)),\n  addItem: (grocery) => dispatch(addGroceryItemThunk(grocery)),\n  // updateItem: (grocery) => dispatch(updateSingleGroceryItem(grocery))\n});\n\nexport default connect(mapState, mapDispatch)(GroceryList);\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { updateGroupThunk } from \"../../store/singleGroup\";\nimport {Link} from 'react-router-dom'\n\n\nimport {\n  fetchGroupsThunk,\n  removeGroupThunk,\n} from \"../../store/allGroups\";\n\n/*\nTODOS:\n1. Don't allow user to enter empty group\n2. Make add/edit modals\n3. Cross out completed groups\n4. Button to filter out completed groups\n*/\n\nclass GroupList extends React.Component {\n  constructor(props) {\n    super(props);\n  }\n  componentDidMount() {\n    this.props.fetchGroups(this.props.match.params.userId);\n  }\n\n  async handleDelete(id) {\n    try {\n      await this.props.deleteGroup(id);\n      this.props.fetchGroups();\n    } catch (err) {\n      console.error(err);\n    }\n  }\n\n  render() {\n    let { groups } = this.props;\n    return (\n      <div className=\"group-wrapper\">\n        <h1 className=\"tool-title\">My Groups</h1>\n        <Link to=\"/groups/create\">Create a Group</Link>\n        {!groups.length ? 'You are not a part of any groups.' : (\n        <div id=\"group-box\">\n          {groups.map((group) => (\n            <div key={group.id} className=\"singlegroup\">\n              <Link to={`/groups/${group.id}`}>\n              {group.name}\n              </Link>\n              <button\n                onClick={() => this.handleDelete(group.id)}\n                className=\"deletegroup\"\n              >\n                X\n              </button>\n            </div>\n          ))}\n        </div>\n                  )}\n      </div>\n    );\n  }\n}\n\nconst mapState = (state) => ({\n  groups: state.groups,\n  userId: state.user.id,\n});\n\nconst mapDispatch = (dispatch) => ({\n  fetchGroups: (userId) => dispatch(fetchGroupsThunk(userId)),\n  deleteGroup: (groupId) => dispatch(removeGroupThunk(groupId)),\n  updateGroup: (group) => dispatch(updateGroupThunk(group)),\n});\n\nexport default connect(mapState, mapDispatch)(GroupList);\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport {Redirect} from 'react-router-dom';\nimport { addGroupThunk } from \"../../store/allGroups\";\n\n/*TODOS:\n1. allow group creator to choose whether private/public group? (can be changed later when we make settings) like invite only? or anyone can just join.. etc\n2. option to invite members when creating\n3. redirect to new group page onsubmit\n*/\n\nclass CreateGroup extends React.Component {\n  constructor() {\n    super();\n\n    this.state = {\n      name: \"\",\n      description: \"\",\n      redirectTo: null,\n      // showError: false,\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleChange(event) {\n    this.setState({\n      [event.target.name]: event.target.value,\n    });\n  }\n\n  //clears boxes after submit\n  async handleSubmit(event) {\n    event.preventDefault();\n    try {\n      await this.props.addGroup(this.state);\n      if(this.state.name === \"\"){\n        alert(\"group name can't be empty!\")\n      }\n      this.setState({\n        redirectTo: '/groups'\n      });\n      alert(`Your group \"${this.state.name}\" was created! Redirecting you to your groups page..`)\n    } catch (err) {\n      console.log(\"error creating group\", err);\n    }\n  }\n\n  render() {\n      if (this.state.redirectTo) {\n        return <Redirect to={{pathname: this.state.redirectTo}} />;\n      } else {\n        return(\n      <div className=\"group-wrapper\">\n        <h1>Create Group</h1>\n\n        <form id=\"add-group-form\" onSubmit={this.handleSubmit}>\n          <label htmlFor=\"name\">Name:</label>\n          <input\n            name=\"name\"\n            type=\"text\"\n            placeholder=\"Your new group's name\"\n            onChange={this.handleChange}\n            value={this.state.name}\n          />\n          <label htmlFor=\"name\">Description:</label>\n          <input\n            name=\"description\"\n            type=\"textarea\"\n            placeholder=\"Write a description\"\n            onChange={this.handleChange}\n            value={this.state.description}\n          />\n          <button type=\"submit\">Add</button>\n        </form>\n      </div>\n    );\n  }\n}\n}\n\nconst mapDispatch = (dispatch) => ({\n  addGroup: (group) => dispatch(addGroupThunk(group)),\n});\n\nexport default connect(null, mapDispatch)(CreateGroup);\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { updateGroupThunk, fetchSingleGroup } from \"../../store/singleGroup\";\nimport { Link } from \"react-router-dom\";\nimport { addToGroupThunk, deleteFromGroupThunk } from \"../../store/singleGroup\";\n\nclass SingleGroup extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      userId: \"\",\n    }\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  componentDidMount() {\n    this.props.fetchGroup(this.props.match.params.groupId);\n  }\n\n  handleChange(event) {\n    this.setState({\n      [event.target.name]: event.target.value,\n    });\n  }\n  async handleSubmit(event) {\n    event.preventDefault();\n    try {\n      this.props.addUser(this.props.group.id, this.state.userId);\n    } catch (err) {\n      console.log(\"handlesubmit err\", err);\n    }\n  }\n\n\n  render() {\n   const group = this.props.group;\n\n   return (\n      <div key={group.id} id=\"group-info\">\n        Edit group\n        <form id=\"addform\" onSubmit={this.handleSubmit}>\n        <h3>Add a User</h3>\n        <label htmlFor=\"userId\">id</label>\n        <input\n          name=\"userId\"\n          type=\"text\"\n          onChange={this.handleChange}\n          value={this.props.userId}\n        />\n             <button type=\"submit\">Submit</button>\n      </form>\n\n        <h1 className=\"tool-title\">Group: {group.name}</h1>\n        <img src={group.imageUrl}></img>\n        <h3>Description: {group.description}</h3>\n        Users:\n      {group.users ? (<div>\n       {group.users.map((user) => (\n              <div key={user.id}>\n                  <img src={user.avatarUrl} />\n                  {(() => { if(user.User_Group.role === \"owner\"){\n                    return (<h3>{user.firstName} {user.lastName} 🌟 </h3>)\n                  } else if (user.User_Group.role === \"admin\"){\n                    return (<h3>\n                      {user.firstName} {user.lastName} 🏅\n                    </h3>)\n                  } else {\n                    return (<h3>\n                      {user.firstName} {user.lastName}\n                    </h3>)\n                    }})()}\n              </div>\n            ))}</div>) : \"This group has no members.\"}\n      </div>\n    );\n  }\n}\n\nconst mapState = (state) => ({\n  group: state.singleGroup,\n});\n\nconst mapDispatch = (dispatch) => ({\n  fetchGroup: (group) => dispatch(fetchSingleGroup(group)),\n  updateGroup: (group) => dispatch(updateGroupThunk(group)),\n  addUser: (groupId, userId) => dispatch(addToGroupThunk(groupId, userId))\n});\n\nexport default connect(mapState, mapDispatch)(SingleGroup);\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { withRouter, Route, Switch } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\nimport {\n  UserHome,\n  HomePage,\n  Login,\n  Signup,\n  GroupList,\n  Account,\n  AccountSettings,\n  GroceryList,\n  Calendar,\n  TaskList,\n  CreateGroup,\n  SingleGroup\n} from \"./components\";\nimport { me } from \"./store\";\n\nclass Routes extends Component {\n  componentDidMount() {\n    this.props.loadInitialData();\n  }\n\n  render() {\n    const { isLoggedIn } = this.props;\n    return (\n      <Switch>\n        {/* Routes placed here are available to all visitors */}\n        <Route path=\"/login\" component={Login} />\n        <Route path=\"/signup\" component={Signup} />\n        <Route exact path=\"/\" component={HomePage} />\n\n        {isLoggedIn && (\n          <Switch>\n            {/* Routes placed here are only available after logging in */}\n            <Route exact path=\"/home\" component={UserHome} />\n\n            <Route exact path=\"/account\" component={Account} />\n            <Route exact path=\"/account/settings\" component={AccountSettings} />\n            <Route path=\"/grocery\" component={GroceryList} />\n            {/* <Route path=\"/calendar\" component={Calendar} /> */}\n            <Route exact path=\"/tasks\" component={TaskList} />\n            <Route exact path=\"/groups\" component={GroupList} />\n            <Route exact path=\"/groups/create\" component={CreateGroup} />\n            <Route path=\"/groups/:groupId\" component={SingleGroup}/>\n          </Switch>\n        )}\n        {/* Displays our Login component as a fallback */}\n        <Route component={Login} />\n      </Switch>\n    );\n  }\n}\n\nconst mapState = (state) => {\n  return {\n    isLoggedIn: !!state.user.id,\n  };\n};\n\nconst mapDispatch = (dispatch) => {\n  return {\n    loadInitialData() {\n      dispatch(me());\n    },\n  };\n};\n\n// The `withRouter` wrapper makes sure that updates are not blocked\n// when the url changes\nexport default withRouter(connect(mapState, mapDispatch)(Routes));\n\nRoutes.propTypes = {\n  loadInitialData: PropTypes.func.isRequired,\n  isLoggedIn: PropTypes.bool.isRequired,\n};\n","import React from \"react\";\nimport { SideNav } from \"./components\";\nimport {BottomNav} from './components'\nimport Routes from \"./routes\";\nimport \"./App.css\";\n\nconst App = () => {\n  return (\n    <div className=\"app-wrap\">\n        <SideNav/>\n        <div id=\"sitebody\">\n      <Routes />\n      <BottomNav/></div>\n\n    </div>\n  );\n};\n\nexport default App;\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import(\"web-vitals\").then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://cra.link/PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://cra.link/PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { Router } from \"react-router-dom\";\nimport { Provider } from \"react-redux\";\nimport history from \"./history\";\nimport store from \"./store\";\nimport * as serviceWorkerRegistration from './serviceWorkerRegistration';\n\nReactDOM.render(\n  <Provider store={store}>\n    <Router history={history}>\n      <App />\n    </Router>\n  </Provider>,\n  document.getElementById(\"app\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n\nserviceWorkerRegistration.register();\n\n"],"sourceRoot":""}